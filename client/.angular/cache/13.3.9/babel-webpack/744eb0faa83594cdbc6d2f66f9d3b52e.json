{"ast":null,"code":"import { catchError, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst END_POINT = 'http://localhost:3000/database';\nexport let ClientControllerService = /*#__PURE__*/(() => {\n  class ClientControllerService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getAllMedecins() {\n      return this.http.get(END_POINT).pipe(catchError(this.handleError('basicGet')));\n    }\n\n    getAllService() {\n      return this.http.get(END_POINT + `/services`).pipe(catchError(this.handleError('basicGet')));\n    }\n\n    updateMedecins(med) {\n      return this.http.patch(END_POINT, med).pipe(catchError(this.handleError('medecins')));\n    }\n\n    addMedecin(med) {\n      return this.http.post(END_POINT, med).pipe(catchError(this.handleError('medecins')));\n    }\n\n    deleteMedecin(num) {\n      return this.http.delete(END_POINT + `/${num}`).pipe(catchError(this.handleError('medecins')));\n    }\n\n    handleError(request, result) {\n      return () => of(result);\n    }\n\n  }\n\n  ClientControllerService.ɵfac = function ClientControllerService_Factory(t) {\n    return new (t || ClientControllerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ClientControllerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientControllerService,\n    factory: ClientControllerService.ɵfac,\n    providedIn: 'root'\n  });\n  return ClientControllerService;\n})();","map":null,"metadata":{},"sourceType":"module"}