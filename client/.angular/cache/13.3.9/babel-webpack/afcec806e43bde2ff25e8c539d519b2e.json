{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Component, Inject } from '@angular/core';\nimport { DisplayServiceService } from '../services/display-service.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet ModificationComponentComponent = class ModificationComponentComponent {\n  constructor(data, service) {\n    this.data = data;\n    this.service = service;\n  }\n\n  ngOnInit() {\n    this.modifyForm = new FormGroup({\n      firstName: new FormControl(this.data.doctor.prenom, [Validators.required]),\n      name: new FormControl(this.data.doctor.nom, [Validators.required]),\n      specialityValue: new FormControl(this.data.doctor.specialite, [Validators.required]),\n      years: new FormControl(this.data.doctor.anneesexperience, [Validators.required])\n    });\n  }\n\n  onSubmit() {\n    this.service.modifyDoctor({\n      idmedecin: this.data.doctor.idmedecin,\n      prenom: this.modifyForm.value.firstName,\n      nom: this.modifyForm.value.name,\n      specialite: this.modifyForm.value.specialityValue,\n      anneesexperience: this.modifyForm.value.years,\n      idservice: this.getServiceId(this.modifyForm.value.specialityValue)\n    }, this.data.index);\n  }\n\n  getServiceId(serviceValue) {\n    for (const element of this.service.getServiceList()) {\n      if (serviceValue == element.nomservice) {\n        return element.idservice;\n      }\n    }\n\n    return -1;\n  }\n\n};\nModificationComponentComponent = __decorate([Component({\n  selector: 'app-modification-component',\n  templateUrl: './modification-component.component.html',\n  styleUrls: ['./modification-component.component.css']\n}), __param(0, Inject(MAT_DIALOG_DATA)), __metadata(\"design:paramtypes\", [Object, DisplayServiceService])], ModificationComponentComponent);\nexport { ModificationComponentComponent };","map":null,"metadata":{},"sourceType":"module"}